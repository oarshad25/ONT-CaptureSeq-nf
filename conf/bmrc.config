// profile for BMRC cluster

params {
    config_profile_description = 'BMRC profile'
}

apptainer {
    enabled = true
    autoMounts = true
    cacheDir = '/well/pharrison/users/piz649/.apptainer_cache'
}

executor {
    name = 'slurm'
    queueSize = 100
    submitRateLimit = "10/1sec"
    exitReadTimeout = "5 min"
}

// TODO: Revisit process configurations: settings, define additional labels such as for array jobs

process {

    /*
    Set up retry strategy to retry tasks a maximum of 'maxRetries' times with certain error codes
    progressively increasing resources in each task.attempt whilst limiting
    */

    maxRetries = 1
    errorStrategy = { task.exitStatus in [12, 104, 137, 134, 139, 140, 141, 143, 151, 247] ? 'retry' : 'finish' }

    /*
    Cap pipeline step resource requests
    */

    resourceLimits = [
        memory: 256.GB,
        cpus: 32,
        time: 10.d,
    ]

    /*
    Configure default process resources
    */

    // TODO: revisit defaults
    cpus = { 2 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }

    // dynamic queue selection based on task configs
    queue = {
        if (task.time > 30.h) {
            "long"
        }
        else if (task.memory > 512.GB) {
            "himem"
        }
        else {
            "short"
        }
    }

    /*
    Set up process configuration based on labels
    */

    // label for processes to be executed locally
    withLabel: local_executor {
        executor = 'local'
    }
    // label for processes to not use container but locally installed software
    withLabel: local_software {
        container = ""
    }
    // label for jobs that are to use job arrays
    withLabel: very_short {
        cpus = { 1 * task.attempt }
        memory = { 6.GB * task.attempt }
        time = { 10.m * task.attempt }
        array = 100
    }
    withLabel: single {
        cpus = { 1 * task.attempt }
        memory = { 6.GB * task.attempt }
        time = { 4.h * task.attempt }
    }
    withLabel: low {
        cpus = { 2 * task.attempt }
        memory = { 12.GB * task.attempt }
        time = { 4.h * task.attempt }
    }
    withLabel: medium {
        cpus = { 6 * task.attempt }
        memory = { 36.GB * task.attempt }
        time = { 8.h * task.attempt }
    }
    withLabel: high {
        cpus = { 12 * task.attempt }
        memory = { 72.GB * task.attempt }
        time = { 16.h * task.attempt }
    }
    withLabel: long {
        cpus = { 8 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 5.d * task.attempt }
    }
    withLabel: largemem {
        cpus = { 8 * task.attempt }
        memory = { 128.GB * task.attempt }
        time = { 16.h * task.attempt }
    }

    /*
    TODO: Specify path to containers/modules
    Configure software requirements for each process by name
    by specifying path to container
    and optionally process specific resources (e.g. cpus, time, memory)
    */

    // withName: FOO {
    //     cpus = 4
    //     time = '1d'
    //     memory = '64GB'
    //     container = "path/to/container"
    //     // or use beforeScript to load system module
    //     beforeScript = "module load foo"
    // }

    /*
    // Miscellaneous settings
    */

    // Fail if process waits in submission queue beyond a specified time
    maxSubmitAwait = '60 minutes'

    // Executes tasks in node local scratch given by $TMPDIR
    scratch = true

    // for shared file systems like BMRC cluster
    cache = 'lenient'

    // Fail a task if any command returns non-zero exit code
    // See https://www.nextflow.io/docs/latest/reference/process.html#shell
    shell = ['/bin/bash', '-euo', 'pipefail']
}
